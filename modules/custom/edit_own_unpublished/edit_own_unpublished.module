<?php

use Drupal\Core\Access\AccessResult;

function edit_own_unpublished_node_access(\Drupal\node\NodeInterface $node, $op, \Drupal\Core\Session\AccountInterface $account) {
  if (is_string($node)) {
    return AccessResult::neutral();
  }
  if ($op == 'update'
      && $node->getOwnerId() == $account->id()
      && edit_own_unpublished_check_user_access($account, $node->bundle())) {
    if (!$node->isPublished()) {
      return AccessResult::allowed();
    }
    elseif ($node->isPublished()
            && !edit_own_unpublished_check_user_access_node_edit($account, $node->bundle())) {
      if (node_is_page($node)) {
        drupal_set_message(t('Because this content has been published, you are no longer able to edit it.'), 'warning');
      }
      return AccessResult::neutral();
    }
  }
  return AccessResult::neutral();
}

/**
 * Check if user has edit permissions granted by this module for the node type.
 *
 * @param $account \Drupal\Core\Session\AccountInterface User Account.
 * @param $node_type string Node type
 *
 * @return boolean
 */
function edit_own_unpublished_check_user_access($account, $node_type) {
  return $account->hasPermission('edit own unpublished any') || $account->hasPermission("edit own unpublished {$node_type}");
}

/**
 * Check if user can edit node using known edit-granting permissions.
 *
 * @param $account \Drupal\Core\Session\AccountInterface User Account.
 * @param $node_type string Node type
 *
 * @return boolean
 */
function edit_own_unpublished_check_user_access_node_edit($account, $node_type) {
  return $account->hasPermission("edit own {$node_type} content")
         || $account->hasPermission("edit any {$node_type} content")
         || $account->hasPermission('administer nodes')
         || $account->hasPermission('bypass node access');
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function edit_own_unpublished_form_node_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $account = \Drupal::currentUser();
  $node_type = $form_state->getFormObject()->getEntity()->bundle();
  // If user probably will lose access on publish, warn.
  if (edit_own_unpublished_check_user_access($account, $node_type)
      && isset($form['actions']['publish']['#value'])
      && !edit_own_unpublished_check_user_access_node_edit($account, $node_type)) {
    $form['actions']['publish']['#value'] = t('Save, publish, and lose edit access');
  }
}
