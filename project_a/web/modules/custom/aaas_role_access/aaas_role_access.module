<?php

/**
 * @file
 * Node access magic stays here!
 */

use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\node\NodeInterface;

/**
 * Callback for allowed_values_function of field_role_access.
 */
function project_a_role_access_allowed_roles(FieldStorageConfig $definition, ContentEntityInterface $entity = NULL, $cacheable) {
  $role_access_whitelist = \Drupal::config('project_a_role_access.settings')->get('whitelist', ['member']);
  $roles = [];

  foreach (user_roles(TRUE) as $role_machine_name => $role) {
    if (in_array($role_machine_name, $role_access_whitelist)) {
      // Get a truncated sha1 hash as an integer for the role machine name.
      // This is done because Drupal 8 doesn't store integer `rid`s for roles.
      $role_id = project_a_role_access_get_role_int($role_machine_name);
      $roles[$role_id] = $role->label();
    }
  }

  return $roles;
}

/**
 * Implements hook_node_access_records().
 */
function project_a_role_access_node_access_records(NodeInterface $node) {
  $access_rid = 0;

  if ($node->hasField('field_role_access') === FALSE) {
    return NULL;
  }

  $field = $node->get('field_role_access');
  $field_value = $field->getValue();

  if (is_array($field_value)) {
    $field_value = array_shift($field_value);
    $access_rid = $field_value['value'];
  }

  if (!$node->isPublished() || !$access_rid) {
    return NULL;
  }

  $grants[] = [
    'realm' => 'project_a_role_access_rid',
    'gid' => (int) $access_rid,
    'grant_view' => 1,
    'grant_update' => 0,
    'grant_delete' => 0,
    'priority' => 0,
  ];

  return $grants;
}

/**
 * Implements hook_node_grants().
 */
function project_a_role_access_node_grants(AccountInterface $account, $op) {
  $user_roles = [];

  foreach ($account->getRoles() as $role_machine_name) {
    $user_roles[] = project_a_role_access_get_role_int($role_machine_name);
  }

  return ['project_a_role_access_rid' => $user_roles];
}

/**
 * Converts a role machine name to a (mostly) unique integer.
 *
 * Converts a role machine name to the integer value of the first 6 digits of
 * its sha1 hash.
 *
 * Drupal 8 doesn't store an integer `rid` as compared to Drupal 7, so this is
 * a work-around for the same.
 */
function project_a_role_access_get_role_int($role_machine_name) {
  return (int) hexdec(substr(sha1($role_machine_name), 0, 6));
}
